name: Push Docker Image to ACR

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
#     paths:
#       - "src/**"
  pull_request:
    branches: [ master ]
#     paths:
#       - "src/**"
  workflow_dispatch:
    inputs:
      InvokedBy:
        description: 'Name'
        required: false

env:
  CONTAINER_REGISTRY: acrazurediy.azurecr.io
  image_name: azurediyimage
  AZURE_WEBAPP_NAME: web-azurediy
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.ACR_USERNAME }}
          # Container registry password
          password: ${{ secrets.ACR_PASSWORD }}
          # Container registry server url
          login-server: ${{env.CONTAINER_REGISTRY}}
          
      - name: Push Container to ACR
        working-directory: azurediy
        run: |
          docker build . -t ${{env.CONTAINER_REGISTRY}}/${{env.image_name}}:${{ github.sha }}
          docker push ${{env.CONTAINER_REGISTRY}}/${{env.image_name}}:${{ github.sha }}
  
  DeployWebApp:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set Web App ACR authentication
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
                {
                    "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                    "value": "${{ secrets.ACR_PASSWORD }}",
                    "slotSetting": false
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_URL",
                    "value": "https://${{env.CONTAINER_REGISTRY}}",
                    "slotSetting": false
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                    "value": "${{ secrets.ACR_USERNAME  }}",
                    "slotSetting": false
                }
            ]
          
      - name: 'Deploy to Azure Web App for Container'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          images: ${{ env.CONTAINER_REGISTRY }}/${{env.image_name}}:${{ github.sha }}